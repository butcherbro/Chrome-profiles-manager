import QtQuick
import QtQuick.Controls.Basic
import QtQuick.Layouts

Rectangle {
    id: root
    color: "#f0f0f0"
    
    signal backClicked()
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
    property bool isCreating: false
    property string creationStatus: ""
    property bool creationSuccess: false
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –æ —Å—Ç–∞—Ç—É—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
    Connections {
        target: profileManager
        function onProfileCreationStatusChanged(success, message) {
            isCreating = false
            creationStatus = message
            creationSuccess = success
            statusMessage.visible = true
            statusTimer.restart()
        }
    }
    
    ColumnLayout {
        anchors.fill: parent
        anchors.margins: 10
        spacing: 15

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        Text {
            text: "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π"
            font.pixelSize: 18
            font.bold: true
            Layout.alignment: Qt.AlignHCenter
            Layout.bottomMargin: 10
        }

        // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        Text {
            text: "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π"
            font.pixelSize: 14
            Layout.fillWidth: true
            wrapMode: Text.WordWrap
            Layout.bottomMargin: 5
        }

        // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        Button {
            text: "üìù –∑–∞–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é"
            Layout.fillWidth: true
            Layout.preferredHeight: 50
            flat: true
            enabled: !isCreating
            
            background: Rectangle {
                color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                border.color: "#d0d0d0"
                radius: 4
            }
            
            contentItem: Text {
                text: parent.text
                horizontalAlignment: Text.AlignLeft
                verticalAlignment: Text.AlignVCenter
                leftPadding: 10
                color: parent.enabled ? "#000000" : "#999999"
            }
            
            onClicked: {
                manualCreationPanel.visible = true
                autoCreationPanel.visible = false
            }
        }
        
        Button {
            text: "ü§ñ –∑–∞–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
            Layout.fillWidth: true
            Layout.preferredHeight: 50
            flat: true
            enabled: !isCreating
            
            background: Rectangle {
                color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                border.color: "#d0d0d0"
                radius: 4
            }
            
            contentItem: Text {
                text: parent.text
                horizontalAlignment: Text.AlignLeft
                verticalAlignment: Text.AlignVCenter
                leftPadding: 10
                color: parent.enabled ? "#000000" : "#999999"
            }
            
            onClicked: {
                manualCreationPanel.visible = false
                autoCreationPanel.visible = true
            }
        }
        
        // –ü–∞–Ω–µ–ª—å —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
        Rectangle {
            id: manualCreationPanel
            Layout.fillWidth: true
            Layout.preferredHeight: 200
            color: "#ffffff"
            border.color: "#d0d0d0"
            radius: 4
            visible: false
            
            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 10
                spacing: 10
                
                Text {
                    text: "–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)"
                    font.pixelSize: 14
                    Layout.fillWidth: true
                }
                
                TextArea {
                    id: manualProfileNames
                    Layout.fillWidth: true
                    Layout.fillHeight: true
                    placeholderText: "–ù–∞–ø—Ä–∏–º–µ—Ä: profile1, profile2, profile3"
                    wrapMode: TextEdit.Wrap
                    
                    background: Rectangle {
                        color: "#ffffff"
                        border.color: "#d0d0d0"
                        radius: 2
                    }
                }
                
                Button {
                    text: "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏"
                    Layout.fillWidth: true
                    Layout.preferredHeight: 40
                    enabled: manualProfileNames.text.trim() !== "" && !isCreating
                    
                    background: Rectangle {
                        color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                        border.color: "#d0d0d0"
                        radius: 2
                    }
                    
                    contentItem: Text {
                        text: parent.text
                        horizontalAlignment: Text.AlignHCenter
                        color: parent.enabled ? "#000000" : "#999999"
                    }
                    
                    onClicked: {
                        isCreating = true
                        profileManager.createProfilesManually(manualProfileNames.text)
                    }
                }
            }
        }
        
        // –ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
        Rectangle {
            id: autoCreationPanel
            Layout.fillWidth: true
            Layout.preferredHeight: 200
            color: "#ffffff"
            border.color: "#d0d0d0"
            radius: 4
            visible: false
            
            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 10
                spacing: 10
                
                Text {
                    text: "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–∏–ª–µ–π"
                    font.pixelSize: 14
                    Layout.fillWidth: true
                }
                
                SpinBox {
                    id: profileCount
                    Layout.fillWidth: true
                    from: 1
                    to: 100
                    value: 5
                    editable: true
                }
                
                Text {
                    text: "–ü—Ä–µ—Ñ–∏–∫—Å –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                    font.pixelSize: 14
                    Layout.fillWidth: true
                }
                
                TextField {
                    id: profilePrefix
                    Layout.fillWidth: true
                    placeholderText: "–ù–∞–ø—Ä–∏–º–µ—Ä: profile_"
                    
                    background: Rectangle {
                        color: "#ffffff"
                        border.color: "#d0d0d0"
                        radius: 2
                    }
                }
                
                Button {
                    text: "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏"
                    Layout.fillWidth: true
                    Layout.preferredHeight: 40
                    enabled: !isCreating
                    
                    background: Rectangle {
                        color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                        border.color: "#d0d0d0"
                        radius: 2
                    }
                    
                    contentItem: Text {
                        text: parent.text
                        horizontalAlignment: Text.AlignHCenter
                        color: parent.enabled ? "#000000" : "#999999"
                    }
                    
                    onClicked: {
                        isCreating = true
                        profileManager.createProfilesAutomatically(profileCount.value, profilePrefix.text)
                    }
                }
            }
        }
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
        Rectangle {
            id: statusMessage
            Layout.fillWidth: true
            Layout.preferredHeight: 40
            Layout.topMargin: 10
            property bool success: creationSuccess
            property string message: creationStatus
            
            color: success ? "#e6f7e6" : "#ffebee"  // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —É—Å–ø–µ—Ö–∞, –∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–∫–∏
            border.color: success ? "#c3e6c3" : "#ffcdd2"
            radius: 4
            visible: false
            
            Text {
                anchors.centerIn: parent
                text: statusMessage.message
                color: statusMessage.success ? "#2e7d32" : "#c62828"  // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –∏–ª–∏ —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                font.pixelSize: 14
                width: parent.width - 20
                horizontalAlignment: Text.AlignHCenter
                wrapMode: Text.WordWrap
            }
            
            // –¢–∞–π–º–µ—Ä –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
            Timer {
                id: statusTimer
                interval: 3000  // 3 —Å–µ–∫—É–Ω–¥—ã
                onTriggered: statusMessage.visible = false
            }
        }
        
        // –†–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        Item {
            Layout.fillHeight: true
        }
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        Button {
            text: "üè† –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
            Layout.fillWidth: true
            Layout.preferredHeight: 40
            flat: true
            enabled: !isCreating
            
            background: Rectangle {
                color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                border.color: "#d0d0d0"
                radius: 2
            }
            
            contentItem: Text {
                text: parent.text
                horizontalAlignment: Text.AlignHCenter
                color: parent.enabled ? "#000000" : "#999999"
            }
            
            onClicked: root.backClicked()
        }
    }
} 