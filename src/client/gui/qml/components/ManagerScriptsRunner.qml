import QtQuick
import QtQuick.Controls.Basic
import QtQuick.Layouts
import QtQuick.Window

Window {
    id: root
    objectName: "managerScriptsRunner"
    title: "–ü—Ä–æ–≥–æ–Ω —Å–∫—Ä–∏–ø—Ç–æ–≤ Manager - Chrome Profile Manager"
    color: "#f5f5f5"
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
    width: 1000
    height: 700
    
    // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    x: Screen.width / 2 - width / 2
    y: Screen.height / 2 - height / 2
    
    // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –æ–∫–Ω–∞
    property bool isVisible: false
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ show –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞
    function show() {
        isVisible = true
        visible = true
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        try {
            profileManager.update_manager_scripts_list()
            console.log("–ú–µ—Ç–æ–¥ update_manager_scripts_list() –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        } catch (e) {
            console.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ update_manager_scripts_list():", e)
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
        profileManager.update_profiles_list()
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏ —Å–∫—Ä–∏–ø—Ç—ã
        profileManager.deselectAllProfiles()
        resetScriptSelection()
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        updateSelectedProfiles()
        updateSelectedScripts()
    }
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ hide –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–ª–∞–≥–∞
    function hide() {
        isVisible = false
        visible = false
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    onClosing: function(close) {
        // –í–º–µ—Å—Ç–æ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        hide()
        close.accepted = false
    }
    
    signal backClicked()
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π
    property bool isProcessing: false
    property string operationStatus: ""
    property bool operationSuccess: false
    
    // –ú–æ–¥–µ–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
    property var selectedProfiles: []
    property var selectedScripts: []
    property bool shuffleScripts: false
    
    // –¢–µ–∫—É—â–∏–π —Å–ø–æ—Å–æ–± –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
    property string currentSelectionMethod: "list"
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—ã–±–æ—Ä–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
    function resetScriptSelection() {
        for (var i = 0; i < scriptsListView.count; i++) {
            var item = scriptsListView.itemAtIndex(i)
            if (item) {
                item.children[0].checked = false
            }
        }
        selectedScripts = []
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Ç ProfileManager
    Connections {
        target: profileManager
        
        function onManagerScriptOperationStatusChanged(success, message) {
            isProcessing = false
            operationStatus = message
            operationSuccess = success
            statusMessage.visible = true
            statusTimer.restart()
            
            console.log("===== –û–ü–ï–†–ê–¶–ò–Ø –í–´–ü–û–õ–ù–ï–ù–ò–Ø –°–ö–†–ò–ü–¢–û–í –ó–ê–í–ï–†–®–ï–ù–ê =====")
            console.log("–£—Å–ø–µ—Ö:", success)
            console.log("–°–æ–æ–±—â–µ–Ω–∏–µ:", message)
            console.log("–§–ª–∞–≥ isProcessing —Å–±—Ä–æ—à–µ–Ω –≤ false")
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏
            if (selectedProfiles.length > 0 && selectedScripts.length > 0) {
                runButtonRect.color = "#4CAF50"
            } else {
                runButtonRect.color = "#e0e0e0"
            }
        }
        
        function onSelectedProfilesChanged() {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
            updateSelectedProfiles()
        }
        
        function onProfilesListChanged() {
            // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –æ–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
            updateSelectedProfiles()
        }
        
        function onManagerScriptsListChanged() {
            // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –æ–±–Ω–æ–≤–ª—è–µ–º UI
            console.log("–°–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è")
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    function updateSelectedScripts() {
        selectedScripts = []
        for (var i = 0; i < scriptsListView.count; i++) {
            var item = scriptsListView.itemAtIndex(i)
            if (item && item.children[0].checked) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å ListView –Ω–∞–ø—Ä—è–º—É—é
                selectedScripts.push(scriptsListView.model[i])
            }
        }
        console.log("–û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:", JSON.stringify(selectedScripts))
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞
        console.log("–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞:", selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing)
        console.log("–í—ã–±—Ä–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π:", selectedProfiles.length)
        console.log("–í—ã–±—Ä–∞–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–≤:", selectedScripts.length)
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
    function updateSelectedProfiles() {
        selectedProfiles = []
        for (var i = 0; i < profileManager.profilesList.length; i++) {
            var profile = profileManager.profilesList[i]
            if (profileManager.isProfileSelected(profile)) {
                selectedProfiles.push(profile)
            }
        }
        console.log("–û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:", JSON.stringify(selectedProfiles))
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"
        var allSelected = selectedProfiles.length === profileManager.profilesList.length && profileManager.profilesList.length > 0
        if (selectAllCheckbox.checked !== allSelected) {
            selectAllCheckbox.checked = allSelected
            console.log("–û–±–Ω–æ–≤–ª–µ–Ω —á–µ–∫–±–æ–∫—Å '–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏':", allSelected)
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞
        console.log("–ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞:", selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing)
        console.log("–í—ã–±—Ä–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π:", selectedProfiles.length)
        console.log("–í—ã–±—Ä–∞–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–≤:", selectedScripts.length)
    }
    
    Component.onCompleted: {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        console.log("–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ")
        profileManager.update_profiles_list()
        updateSelectedProfiles()
        updateSelectedScripts()
    }
    
    ColumnLayout {
        anchors.fill: parent
        anchors.margins: 15
        spacing: 15

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        Text {
            text: "–ü—Ä–æ–≥–æ–Ω —Å–∫—Ä–∏–ø—Ç–æ–≤ Manager"
            font.pixelSize: 24
            font.bold: true
            Layout.alignment: Qt.AlignHCenter
            Layout.bottomMargin: 10
        }
        
        // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –¥–≤—É–º—è –∫–æ–ª–æ–Ω–∫–∞–º–∏
        RowLayout {
            Layout.fillWidth: true
            Layout.fillHeight: true
            spacing: 15
            
            // –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–ø–æ—Å–æ–±—ã –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
            Rectangle {
                Layout.fillHeight: true
                Layout.preferredWidth: parent.width * 0.3
                color: "#ffffff"
                border.color: "#d0d0d0"
                radius: 5
                
                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 10
                    spacing: 10
                    
                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    Text {
                        text: "–°–ø–æ—Å–æ–± –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π"
                        font.pixelSize: 18
                        font.bold: true
                        Layout.fillWidth: true
                    }
                    
                    // –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞
                    Button {
                        text: "üìã –í—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞"
                        Layout.fillWidth: true
                        Layout.preferredHeight: 40
                        
                        background: Rectangle {
                            color: currentSelectionMethod === "list" ? "#e0e0e0" : (parent.hovered ? "#f0f0f0" : "#ffffff")
                            border.color: "#d0d0d0"
                            radius: 3
                        }
                        
                        contentItem: Text {
                            text: parent.text
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                            font.pixelSize: 14
                            elide: Text.ElideNone
                        }
                        
                        onClicked: {
                            currentSelectionMethod = "list"
                            profileManager.deselectAllProfiles()
                        }
                    }
                    
                    Button {
                        text: "‚úèÔ∏è –í–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è"
                        Layout.fillWidth: true
                        Layout.preferredHeight: 40
                        
                        background: Rectangle {
                            color: currentSelectionMethod === "names" ? "#e0e0e0" : (parent.hovered ? "#f0f0f0" : "#ffffff")
                            border.color: "#d0d0d0"
                            radius: 3
                        }
                        
                        contentItem: Text {
                            text: parent.text
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                            font.pixelSize: 14
                            elide: Text.ElideNone
                        }
                        
                        onClicked: {
                            currentSelectionMethod = "names"
                            profileManager.deselectAllProfiles()
                        }
                    }
                    
                    Button {
                        text: "üîç –í—ã–±—Ä–∞—Ç—å –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é"
                        Layout.fillWidth: true
                        Layout.preferredHeight: 40
                        
                        background: Rectangle {
                            color: currentSelectionMethod === "comment" ? "#e0e0e0" : (parent.hovered ? "#f0f0f0" : "#ffffff")
                            border.color: "#d0d0d0"
                            radius: 3
                        }
                        
                        contentItem: Text {
                            text: parent.text
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                            font.pixelSize: 14
                            elide: Text.ElideNone
                        }
                        
                        onClicked: {
                            currentSelectionMethod = "comment"
                            profileManager.deselectAllProfiles()
                        }
                    }
                    
                    // –ß–µ–∫–±–æ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                    CheckBox {
                        id: selectAllCheckbox
                        text: "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏"
                        Layout.fillWidth: true
                        
                        onCheckedChanged: {
                            if (checked) {
                                profileManager.selectAllProfiles()
                            } else {
                                profileManager.deselectAllProfiles()
                            }
                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                            updateSelectedProfiles()
                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
                            profilesListView.forceLayout()
                            
                            // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                            console.log("–ß–µ–∫–±–æ–∫—Å '–í—ã–±—Ä–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏' –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:", checked)
                            console.log("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:", selectedProfiles.length)
                        }
                    }
                    
                    // –ß–µ–∫–±–æ–∫—Å –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
                    CheckBox {
                        id: shuffleScriptsCheckbox
                        text: "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤"
                        Layout.fillWidth: true
                        
                        onCheckedChanged: {
                            shuffleScripts = checked
                        }
                    }
                    
                    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è—Ö
                    Text {
                        text: "–í—ã–±—Ä–∞–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: " + selectedProfiles.length
                        font.pixelSize: 14
                        Layout.fillWidth: true
                    }
                    
                    // –†–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
                    Item {
                        Layout.fillHeight: true
                    }
                }
            }
            
            // –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –í—ã–±–æ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–æ—Å–æ–±–∞)
            Rectangle {
                Layout.fillHeight: true
                Layout.preferredWidth: parent.width * 0.3
                color: "#ffffff"
                border.color: "#d0d0d0"
                radius: 5
                
                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 10
                    spacing: 10
                    
                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    Text {
                        text: currentSelectionMethod === "list" ? "–í—ã–±–æ—Ä –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞" : 
                              currentSelectionMethod === "names" ? "–í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª–µ–π" : 
                              "–ü–æ–∏—Å–∫ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é"
                        font.pixelSize: 18
                        font.bold: true
                        Layout.fillWidth: true
                    }
                    
                    // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ø–æ—Å–æ–±–∞ –≤—ã–±–æ—Ä–∞
                    StackLayout {
                        Layout.fillWidth: true
                        Layout.fillHeight: true
                        currentIndex: currentSelectionMethod === "list" ? 0 : 
                                     currentSelectionMethod === "names" ? 1 : 2
                        
                        // –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
                        ListView {
                            id: profilesListView
                            clip: true
                            
                            model: profileManager.profilesList
                            
                            delegate: Item {
                                width: profilesListView.width
                                height: 30
                                
                                CheckBox {
                                    id: profileCheckBox
                                    anchors.fill: parent
                                    text: modelData
                                    font.pixelSize: 14
                                    checked: profileManager.isProfileSelected(modelData)
                                    
                                    onCheckedChanged: {
                                        if (checked !== profileManager.isProfileSelected(modelData)) {
                                            profileManager.toggleProfileSelection(modelData, checked)
                                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                                            updateSelectedProfiles()
                                        }
                                    }
                                }
                                
                                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                                Connections {
                                    target: profileManager
                                    function onSelectedProfilesChanged() {
                                        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–∏–ª—è
                                        profileCheckBox.checked = profileManager.isProfileSelected(modelData)
                                    }
                                }
                            }
                        }
                        
                        // –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª–µ–π
                        ColumnLayout {
                            spacing: 10
                            
                            TextArea {
                                id: profileNamesInput
                                Layout.fillWidth: true
                                Layout.fillHeight: true
                                placeholderText: "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π, –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É"
                                wrapMode: TextEdit.Wrap
                                font.pixelSize: 14
                            }
                            
                            Button {
                                text: "–ü—Ä–∏–º–µ–Ω–∏—Ç—å"
                                Layout.fillWidth: true
                                Layout.preferredHeight: 40
                                
                                background: Rectangle {
                                    color: parent.hovered ? "#e0e0e0" : "#f5f5f5"
                                    border.color: "#d0d0d0"
                                    radius: 3
                                }
                                
                                contentItem: Text {
                                    text: parent.text
                                    horizontalAlignment: Text.AlignHCenter
                                    verticalAlignment: Text.AlignVCenter
                                    font.pixelSize: 14
                                    elide: Text.ElideNone
                                }
                                
                                onClicked: {
                                    // –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
                                    var profileNames = profileNamesInput.text.split("\n").filter(function(name) {
                                        return name.trim() !== "";
                                    });
                                    
                                    profileManager.deselectAllProfiles();
                                    
                                    for (var i = 0; i < profileNames.length; i++) {
                                        var name = profileNames[i].trim();
                                        if (profileManager.profilesList.includes(name)) {
                                            profileManager.toggleProfileSelection(name, true);
                                        }
                                    }
                                }
                            }
                        }
                        
                        // –ü–æ–∏—Å–∫ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
                        ColumnLayout {
                            spacing: 10
                            
                            TextField {
                                id: commentSearchInput
                                Layout.fillWidth: true
                                placeholderText: "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö"
                                font.pixelSize: 14
                            }
                            
                            Button {
                                text: "–ù–∞–π—Ç–∏"
                                Layout.fillWidth: true
                                Layout.preferredHeight: 40
                                
                                background: Rectangle {
                                    color: parent.hovered ? "#e0e0e0" : "#f5f5f5"
                                    border.color: "#d0d0d0"
                                    radius: 3
                                }
                                
                                contentItem: Text {
                                    text: parent.text
                                    horizontalAlignment: Text.AlignHCenter
                                    verticalAlignment: Text.AlignVCenter
                                    font.pixelSize: 14
                                    elide: Text.ElideNone
                                }
                                
                                onClicked: {
                                    // –ò—â–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
                                    profileManager.searchProfilesByComment(commentSearchInput.text);
                                }
                            }
                            
                            // –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                            ListView {
                                id: filteredProfilesListView
                                Layout.fillWidth: true
                                Layout.fillHeight: true
                                clip: true
                                
                                model: profileManager.filteredProfilesList
                                
                                delegate: CheckBox {
                                    width: filteredProfilesListView.width
                                    height: 30
                                    text: modelData
                                    font.pixelSize: 14
                                    checked: profileManager.isProfileSelected(modelData)
                                    
                                    onCheckedChanged: {
                                        profileManager.toggleProfileSelection(modelData, checked)
                                        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
                                        updateSelectedProfiles()
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
            // –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –í—ã–±–æ—Ä —Å–∫—Ä–∏–ø—Ç–æ–≤
            Rectangle {
                Layout.fillHeight: true
                Layout.fillWidth: true
                color: "#ffffff"
                border.color: "#d0d0d0"
                radius: 5
                
                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 10
                    spacing: 10
                    
                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
                    Text {
                        text: "–í—ã–±–æ—Ä —Å–∫—Ä–∏–ø—Ç–æ–≤"
                        font.pixelSize: 18
                        font.bold: true
                        Layout.fillWidth: true
                    }
                    
                    // –°–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
                    ListView {
                        id: scriptsListView
                        Layout.fillWidth: true
                        Layout.fillHeight: true
                        clip: true
                        
                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º profileManager.managerScriptsList –≤–º–µ—Å—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
                        model: profileManager.managerScriptsList || ["test_script"]
                        
                        // –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–æ–≤—ã–π –¥–µ–ª–µ–≥–∞—Ç
                        delegate: Item {
                            width: scriptsListView.width
                            height: 30
                            
                            CheckBox {
                                id: scriptCheckBox
                                anchors.fill: parent
                                text: modelData
                                font.pixelSize: 14
                                
                                onCheckedChanged: {
                                    console.log("–°–∫—Ä–∏–ø—Ç " + modelData + " " + (checked ? "–≤—ã–±—Ä–∞–Ω" : "–æ—Ç–º–µ–Ω–µ–Ω"))
                                    root.updateSelectedScripts()
                                }
                            }
                        }
                    }
                    
                    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
                    Text {
                        text: "–í—ã–±—Ä–∞–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–≤: " + selectedScripts.length
                        font.pixelSize: 14
                        Layout.fillWidth: true
                    }
                }
            }
        }
        
        // –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        Rectangle {
            Layout.fillWidth: true
            Layout.preferredHeight: 60
            color: "#ffffff"
            border.color: "#d0d0d0"
            radius: 5
            
            RowLayout {
                anchors.fill: parent
                anchors.margins: 10
                spacing: 15
                
                // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
                Rectangle {
                    id: runButtonRect
                    Layout.fillWidth: true
                    Layout.preferredHeight: 40
                    color: (selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing) ? "#4CAF50" : "#e0e0e0"
                    radius: 3
                    border.color: "#d0d0d0"
                    
                    Text {
                        anchors.centerIn: parent
                        text: "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç—ã"
                        color: (selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing) ? "white" : "#999999"
                        font.pixelSize: 14
                    }
                    
                    MouseArea {
                        anchors.fill: parent
                        hoverEnabled: true
                        
                        onEntered: {
                            if (selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing) {
                                parent.color = "#45a049" // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
                            }
                        }
                        
                        onExited: {
                            if (selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing) {
                                parent.color = "#4CAF50" // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π
                            }
                        }
                        
                        onClicked: {
                            console.log("===== –ö–ù–û–ü–ö–ê –ó–ê–ü–£–°–ö–ê –°–ö–†–ò–ü–¢–û–í –ù–ê–ñ–ê–¢–ê =====")
                            console.log("–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:", JSON.stringify(selectedProfiles))
                            console.log("–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:", JSON.stringify(selectedScripts))
                            console.log("–°–æ—Å—Ç–æ—è–Ω–∏–µ isProcessing:", isProcessing)
                            
                            if (selectedProfiles.length > 0 && selectedScripts.length > 0 && !isProcessing) {
                                isProcessing = true
                                
                                // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏
                                parent.color = "#e0e0e0"
                                
                                console.log("===== –ó–ê–ü–£–°–ö–ê–Æ –°–ö–†–ò–ü–¢–´ =====")
                                console.log("–°–∫—Ä–∏–ø—Ç—ã:", JSON.stringify(selectedScripts))
                                console.log("–ü—Ä–æ—Ñ–∏–ª–∏:", JSON.stringify(selectedProfiles))
                                console.log("–ü–µ—Ä–µ–º–µ—à–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã:", shuffleScripts)
                                console.log("–§–ª–∞–≥ isProcessing —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ true")
                                
                                // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã
                                try {
                                    // –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –≤ ProfileManager
                                    profileManager.setSelectedProfiles(selectedProfiles)
                                    profileManager.runManagerScripts(selectedProfiles, selectedScripts, shuffleScripts)
                                    console.log("===== –ú–ï–¢–û–î runManagerScripts –í–´–ó–í–ê–ù =====")
                                } catch (e) {
                                    console.log("===== –û–®–ò–ë–ö–ê –ü–†–ò –í–´–ó–û–í–ï runManagerScripts =====", e)
                                    isProcessing = false
                                    
                                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏
                                    if (selectedProfiles.length > 0 && selectedScripts.length > 0) {
                                        parent.color = "#4CAF50"
                                    } else {
                                        parent.color = "#e0e0e0"
                                    }
                                    
                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                    operationSuccess = false
                                    operationStatus = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–æ–≤: " + e
                                    statusMessage.visible = true
                                    statusTimer.restart()
                                }
                            } else {
                                console.log("===== –ù–ï–í–û–ó–ú–û–ñ–ù–û –ó–ê–ü–£–°–¢–ò–¢–¨ –°–ö–†–ò–ü–¢–´ =====")
                                console.log("–ù–µ –≤—ã–±—Ä–∞–Ω—ã –ø—Ä–æ—Ñ–∏–ª–∏ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç—ã, –∏–ª–∏ —É–∂–µ –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞")
                                console.log("selectedProfiles.length:", selectedProfiles.length)
                                console.log("selectedScripts.length:", selectedScripts.length)
                                console.log("isProcessing:", isProcessing)
                            }
                        }
                    }
                }
            }
        }
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
        Rectangle {
            id: statusMessage
            Layout.fillWidth: true
            Layout.preferredHeight: 40
            Layout.topMargin: 10
            property bool success: operationSuccess
            property string message: operationStatus
            
            color: success ? "#e6f7e6" : "#ffebee"  // –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —É—Å–ø–µ—Ö–∞, –∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–∫–∏
            border.color: success ? "#c3e6c3" : "#ffcdd2"
            radius: 5
            visible: false
            
            Text {
                anchors.centerIn: parent
                text: statusMessage.message
                color: statusMessage.success ? "#2e7d32" : "#c62828"  // –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –∏–ª–∏ —Ç–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                font.pixelSize: 14
                width: parent.width - 20
                horizontalAlignment: Text.AlignHCenter
                wrapMode: Text.WordWrap
            }
            
            // –¢–∞–π–º–µ—Ä –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
            Timer {
                id: statusTimer
                interval: 3000  // 3 —Å–µ–∫—É–Ω–¥—ã
                onTriggered: statusMessage.visible = false
            }
        }
        
        // –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫—Ä—ã—Ç—å"
        Button {
            text: "üè† –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ"
            Layout.fillWidth: true
            Layout.preferredHeight: 40
            flat: true
            enabled: !isProcessing
            
            background: Rectangle {
                color: parent.enabled ? (parent.hovered ? "#e0e0e0" : "#ffffff") : "#f5f5f5"
                border.color: "#d0d0d0"
                radius: 3
            }
            
            contentItem: Text {
                text: parent.text
                horizontalAlignment: Text.AlignHCenter
                verticalAlignment: Text.AlignVCenter
                font.pixelSize: 14
                color: parent.enabled ? "#000000" : "#999999"
                elide: Text.ElideNone
            }
            
            onClicked: {
                root.hide()
                root.backClicked()
            }
        }
    }
} 