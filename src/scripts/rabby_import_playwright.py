#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∫–æ—à–µ–ª—å–∫–æ–≤ Rabby Wallet –≤ –ø—Ä–æ—Ñ–∏–ª–∏ Chrome —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Playwright.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–º–ø–æ—Ä—Ç –∫–∞–∫ —á–µ—Ä–µ–∑ seed-—Ñ—Ä–∞–∑—É, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á.
"""

import os
import time
import json
from loguru import logger
from playwright.sync_api import Page
from typing import Optional, Dict, Any

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å –æ–±—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
from src.utils.common_actions import click_element, fill_input, wait_for_element, check_element_exists

def get_txt_line_by_profile_name(profile_name: str, file_path: str) -> Optional[str]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ–∞–π–ª–∞ secrets.txt –ø–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è
    
    Args:
        profile_name: –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è
        file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É secrets.txt
        
    Returns:
        Optional[str]: –°—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            for line in f:
                if line.strip().startswith(f"{profile_name}|"):
                    return line.strip()
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {str(e)}")
    return None

def is_twelve_words_string(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ seed-—Ñ—Ä–∞–∑–æ–π –∏–∑ 12 —Å–ª–æ–≤
    
    Args:
        text: –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ —ç—Ç–æ seed-—Ñ—Ä–∞–∑–∞ –∏–∑ 12 —Å–ª–æ–≤, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    words = text.strip().split()
    return len(words) == 12 and all(word.isalpha() for word in words)

def run_rabby_import(profile_name: str, script_data_path: str, page: Page = None) -> bool:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–º–ø–æ—Ä—Ç –∫–æ—à–µ–ª—å–∫–∞ Rabby Wallet –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    
    Args:
        profile_name: –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è
        script_data_path: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
        
    Returns:
        bool: True –µ—Å–ª–∏ –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç Rabby Wallet –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {profile_name}")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ secrets.txt
        secrets_file_path = os.path.join(os.path.dirname(__file__), "..", "..", "data", "secrets.txt")
        profile_data = get_txt_line_by_profile_name(profile_name, secrets_file_path)
        
        if not profile_data:
            logger.error("‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏–ª–∏ —Å–∏–¥ —Ñ—Ä–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
        # –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        parts = profile_data.split('|')
        if len(parts) == 3:  # –§–æ—Ä–º–∞—Ç: profile_name|secret|password
            profile_name, secret, password = parts
        elif len(parts) == 4:  # –§–æ—Ä–º–∞—Ç: profile_name|wallet_type|secret|password
            profile_name, wallet_type, secret, password = parts
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ—à–µ–ª—å–∫–∞, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
            if wallet_type.lower() != 'rabby':
                logger.warning(f"‚ö†Ô∏è –¢–∏–ø –∫–æ—à–µ–ª—å–∫–∞ {wallet_type} –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É (rabby), –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–º–ø–æ—Ä—Ç")
        else:
            logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û–∂–∏–¥–∞–µ—Ç—Å—è: profile_name|secret|password –∏–ª–∏ profile_name|wallet_type|secret|password")
            return False
            
        is_seed_phrase = is_twelve_words_string(secret)
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        screenshots_dir = os.path.join(script_data_path, "screenshots")
        os.makedirs(screenshots_dir, exist_ok=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞
        if not page:
            logger.error("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞")
            return False
            
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        context = page.context
        
        # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
        time.sleep(1.5)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ URL
        rabby_url = f"chrome-extension://acmacodkjbdgmoleebolmdjonilkdbch/index.html#/new-user/guide"
        logger.info(f"üîó –û—Ç–∫—Ä—ã–≤–∞–µ–º Rabby –ø–æ URL: {rabby_url}")
        rabby_page = context.new_page()
        rabby_page.goto(rabby_url, wait_until="networkidle")  # wait_until –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        time.sleep(1)

        click_element(
            page=rabby_page,
            selector="button:has-text('I already have an address')",
            log_message="–ù–∞–∂–∏–º–∞–µ–º 'I already have an address'...",
            timeout=10000,
            highlight=True
         )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        time.sleep(0.5)

        if is_seed_phrase:
            # –ò–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ seed-—Ñ—Ä–∞–∑—É
            logger.info("üîë –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ seed-—Ñ—Ä–∞–∑—É...")
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            time.sleep(0.5)
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –∫–ª–∏–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
            logger.info("üîÑ –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–π –∫–ª–∏–∫ –ø–æ —Ç–µ–∫—Å—Ç—É 'Seed Phrase'...")
            try:
                rabby_page.click("text=Seed Phrase")
                logger.info("‚úÖ –ö–ª–∏–∫ –ø–æ —Ç–µ–∫—Å—Ç—É 'Seed Phrase' –≤—ã–ø–æ–ª–Ω–µ–Ω")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
                time.sleep(0.5)
            except Exception as direct_click_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∫–ª–∏–∫–µ: {str(direct_click_error)}")         
            
            # –í–≤–æ–¥–∏–º —Å–ª–æ–≤–∞ seed-—Ñ—Ä–∞–∑—ã
            words = secret.split()
            for i, word in enumerate(words, 1):
                word_input = rabby_page.locator(f"input[placeholder*='‚Ä¢'], .is-mnemonics-input input, input.ant-input >> nth={i-1}")
                word_input.fill(word)
                logger.info(f"‚úçÔ∏è –í–≤–µ–¥–µ–Ω–æ —Å–ª–æ–≤–æ {i} –∏–∑ 12")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ seed-—Ñ—Ä–∞–∑—ã
            time.sleep(0.5)

             #  –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Confirm  - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
            click_element(
                    page=rabby_page,
                    selector="button:has-text('Confirm'),   button.ant-btn-primary",
                    log_message="–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Confirm",
                    timeout=10000,
                    highlight=True
                )
           
            time.sleep(0.5)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–æ—Å—å –ª–∏ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
            logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è...")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
                password_visible = rabby_page.is_visible("#password, input[placeholder*='Password']")
                logger.info(f"üëÅÔ∏è –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –≤–∏–¥–∏–º–æ: {password_visible}")
                
                if password_visible:
                    # –í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å
                    logger.info("üîë –í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å...")
                    rabby_page.fill("#password, input[placeholder*='Password']", password)
                    logger.info("‚úÖ –ü–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω")
                    
                    # –í–≤–æ–¥–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
                    logger.info("üîë –í–≤–æ–¥–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è...")
                    rabby_page.fill("#confirmPassword, input[placeholder*='Confirm']", password)
                    logger.info("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤–≤–µ–¥–µ–Ω–æ")

                 #  –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Confirm  - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
                click_element(
                    page=rabby_page,
                    selector="button:has-text('Confirm'),   button.ant-btn-primary",
                    log_message="–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Confirm",
                    timeout=10000,
                    highlight=True
                 ) 

            except Exception as password_check_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è: {str(password_check_error)}")
            
            # –ï—Å–ª–∏ —ç—Ç–æ seed-—Ñ—Ä–∞–∑–∞, –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Import
            if is_seed_phrase:

                #  –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Import  - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
                click_element(
                    page=rabby_page,
                    selector="button:has-text('Import'),  button.ant-btn-primary",
                    log_message="–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Import",
                    timeout=10000,
                    highlight=True
                )
             
              #  –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Get Started  - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è
                click_element(
                    page=rabby_page,
                    selector="button:has-text('Get Started'),  button.ant-btn-primary",
                    log_message="–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Get Started",
                    timeout=10000,
                    highlight=True
                )

        logger.success(f"‚úÖ {profile_name} - Rabby Wallet —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ Rabby Wallet: {str(e)}")
        
        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏
        try:
            screenshot_path = os.path.join(screenshots_dir, f"rabby_error_{profile_name}.png")
            rabby_page.screenshot(path=screenshot_path)
            logger.info(f"üì∏ –°–¥–µ–ª–∞–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏: {screenshot_path}")
        except:
            pass
            
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞–ø—É—Å–∫–∞
def register_script(pw):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–∫—Ä–∏–ø—Ç –∏–º–ø–æ—Ä—Ç–∞ Rabby Wallet –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
    
    Args:
        pw: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ PlaywrightChrome
    """
    pw.scripts["rabby_import"] = {
        "human_name": "–ò–º–ø–æ—Ä—Ç Rabby Wallet",
        "method": run_rabby_import
    } 