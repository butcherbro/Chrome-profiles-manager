#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–æ–¥—É–ª—å —Å –æ–±—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Playwright.
–°–æ–¥–µ—Ä–∂–∏—Ç —Ç–∏–ø–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö.
"""

import os
import time
from loguru import logger
from playwright.sync_api import Page, Locator
from typing import Optional, Dict, Any, Union

def click_element(
    page: Page, 
    selector: str, 
    log_message: str = "–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç", 
    timeout: int = 30000,
    sleep_before: float = 0.5,
    take_screenshot: bool = False,
    screenshot_dir: str = None,
    screenshot_name: str = None,
    highlight: bool = True
) -> bool:
    """
    –ù–∞—Ö–æ–¥–∏—Ç —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –∫–ª–∏–∫–∞–µ—Ç –ø–æ –Ω–µ–º—É
    
    Args:
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
        selector: –°–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å –∑–∞–ø—è—Ç–æ–π)
        log_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        sleep_before: –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        take_screenshot: –î–µ–ª–∞—Ç—å –ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º
        screenshot_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        screenshot_name: –ò–º—è —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        highlight: –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º
        
    Returns:
        bool: True –µ—Å–ª–∏ –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    logger.info(f"üñ±Ô∏è {log_message}...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
    if sleep_before > 0:
        time.sleep(sleep_before)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞—Ç–æ—Ä
        element = page.locator(selector)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞
        if element.is_visible(timeout=timeout):
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if take_screenshot and screenshot_dir and screenshot_name:
                screenshot_path = os.path.join(screenshot_dir, screenshot_name)
                page.screenshot(path=screenshot_path)
                logger.info(f"üì∏ –°–¥–µ–ª–∞–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º: {screenshot_path}")
            
            # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if highlight:
                try:
                    element.highlight()
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –≤ headless —Ä–µ–∂–∏–º–µ
            
            # –ö–ª–∏–∫–∞–µ–º –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
            element.click()
            logger.info(f"‚úÖ {log_message} - —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            logger.error(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {selector}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç: {str(e)}")
        return False

def fill_input(
    page: Page, 
    selector: str, 
    value: str,
    log_message: str = "–ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ", 
    timeout: int = 30000,
    sleep_before: float = 0.5,
    highlight: bool = True
) -> bool:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –µ–≥–æ
    
    Args:
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
        selector: –°–µ–ª–µ–∫—Ç–æ—Ä –ø–æ–ª—è –≤–≤–æ–¥–∞
        value: –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞
        log_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        sleep_before: –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        highlight: –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º
        
    Returns:
        bool: True –µ—Å–ª–∏ –≤–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    logger.info(f"‚úçÔ∏è {log_message}...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
    if sleep_before > 0:
        time.sleep(sleep_before)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞—Ç–æ—Ä
        input_field = page.locator(selector)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–æ–ª—è –≤–≤–æ–¥–∞
        if input_field.is_visible(timeout=timeout):
            # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if highlight:
                try:
                    input_field.highlight()
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –≤ headless —Ä–µ–∂–∏–º–µ
            
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ
            input_field.fill(value)
            logger.info(f"‚úÖ {log_message} - —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            logger.error(f"‚ùå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {selector}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–ª—è: {str(e)}")
        return False

def wait_for_element(
    page: Page, 
    selector: str, 
    log_message: str = "–û–∂–∏–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç", 
    timeout: int = 30000,
    state: str = "visible"
) -> bool:
    """
    –û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    
    Args:
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
        selector: –°–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
        log_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        state: –°–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è (visible, hidden, attached, detached)
        
    Returns:
        bool: True –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ—è–≤–∏–ª—Å—è, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    logger.info(f"‚è±Ô∏è {log_message}...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞—Ç–æ—Ä
        element = page.locator(selector)
        
        # –û–∂–∏–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
        element.wait_for(state=state, timeout=timeout)
        logger.info(f"‚úÖ {log_message} - —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: {str(e)}")
        return False

def check_element_exists(
    page: Page, 
    selector: str, 
    log_message: str = "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞", 
    timeout: int = 5000
) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    
    Args:
        page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
        selector: –°–µ–ª–µ–∫—Ç–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
        log_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        
    Returns:
        bool: True –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    logger.info(f"üîç {log_message}...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞—Ç–æ—Ä
        element = page.locator(selector)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞
        is_visible = element.is_visible(timeout=timeout)
        
        if is_visible:
            logger.info(f"‚úÖ {log_message} - —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω")
        else:
            logger.info(f"‚ÑπÔ∏è {log_message} - —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        return is_visible
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞: {str(e)}")
        return False 