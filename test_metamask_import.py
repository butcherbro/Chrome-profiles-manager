#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ—à–µ–ª—å–∫–∞ MetaMask —á–µ—Ä–µ–∑ Playwright
"""

import os
import sys
import time
from loguru import logger

from src.chrome.playwright_chrome import PlaywrightChrome
from src.utils.constants import METAMASK_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.remove()
logger.add(sys.stderr, level="DEBUG")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ –∫–æ—à–µ–ª—å–∫–∞ MetaMask
    """
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    profile_name = sys.argv[1] if len(sys.argv) > 1 else "0"
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ MetaMask –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è {profile_name}")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä PlaywrightChrome
    pw = PlaywrightChrome()
    
    try:
        # –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chrome –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        from src.utils.helpers import kill_chrome_processes
        kill_chrome_processes()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å {profile_name}...")
        if not pw.launch_profile(profile_name):
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
            return
        
        logger.info("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
        # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        logger.info("‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π...")
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—Ä–∞—É–∑–µ—Ä –≤—Å–µ –µ—â–µ –æ—Ç–∫—Ä—ã—Ç
        if not pw.browser or not pw.browser.contexts:
            logger.error("‚ùå –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = pw.browser.contexts[0]
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è MetaMask
        logger.info("ü¶ä –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è MetaMask...")
        metamask_page = context.new_page()
        logger.info("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è MetaMask")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è MetaMask
        logger.info("ü¶ä –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è MetaMask...")
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É MetaMask
            metamask_url = f"chrome-extension://{METAMASK_ID}/home.html#onboarding/welcome"
            metamask_page.goto(metamask_url, timeout=30000)
            logger.info("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è MetaMask –æ—Ç–∫—Ä—ã—Ç–∞")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
            logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è...")
            os.makedirs("screenshots", exist_ok=True)
            metamask_page.screenshot(path="screenshots/metamask_welcome.png")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ...")
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            metamask_page.wait_for_load_state("networkidle", timeout=10000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–µ–∫–±–æ–∫—Å–∞ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            checkbox = metamask_page.locator('label[class="onboarding__terms-label"]')
            if checkbox.is_visible(timeout=5000):
                logger.info("‚úÖ –ß–µ–∫–±–æ–∫—Å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω")
                
                # –ö–ª–∏–∫–∞–µ–º –Ω–∞ —á–µ–∫–±–æ–∫—Å
                logger.info("üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –Ω–∞ —á–µ–∫–±–æ–∫—Å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è...")
                checkbox.click()
                time.sleep(1)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –∏–º–ø–æ—Ä—Ç–∞
                import_button = metamask_page.locator("//button[contains(@data-testid,'onboarding-import-wallet')]")
                if import_button.is_visible(timeout=5000):
                    logger.info("‚úÖ –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞")
                    
                    # –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–º–ø–æ—Ä—Ç–∞
                    logger.info("üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–º–ø–æ—Ä—Ç–∞...")
                    import_button.click()
                    
                    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ 5 —Å–µ–∫—É–Ω–¥
                    logger.info("‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞...")
                    time.sleep(5)
                    
                    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
                    metamask_page.screenshot(path="screenshots/metamask_after_import_click.png")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    current_url = metamask_page.url
                    logger.info(f"üîç –¢–µ–∫—É—â–∏–π URL: {current_url}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–∞—Å—å —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ URL
                    if "import-with-recovery-phrase" in current_url:
                        logger.success("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ URL)")
                        
                        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞
                        logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞...")
                        metamask_page.screenshot(path="screenshots/metamask_import.png")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π –¥–ª—è –≤–≤–æ–¥–∞
                        seed_phrase_textarea = metamask_page.locator('textarea[data-testid="import-srp-text"]')
                        if seed_phrase_textarea.is_visible(timeout=5000):
                            logger.success("‚úÖ –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ seed-—Ñ—Ä–∞–∑—ã –Ω–∞–π–¥–µ–Ω–æ")
                        else:
                            logger.error("‚ùå –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ seed-—Ñ—Ä–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    else:
                        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞
                        try:
                            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                            import_title = metamask_page.get_by_text("Import with Secret Recovery Phrase")
                            if import_title.is_visible(timeout=5000):
                                logger.success("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É)")
                                
                                # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞
                                logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞...")
                                metamask_page.screenshot(path="screenshots/metamask_import.png")
                            else:
                                # –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä
                                import_title = metamask_page.locator('h2:has-text("Import with Secret Recovery Phrase")')
                                if import_title.is_visible(timeout=5000):
                                    logger.success("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É)")
                                    
                                    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞
                                    logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞...")
                                    metamask_page.screenshot(path="screenshots/metamask_import.png")
                                else:
                                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–º–ø–æ—Ä—Ç–∞")
                        except Exception as e:
                            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–º–ø–æ—Ä—Ç–∞: {str(e)}")
                else:
                    logger.error("‚ùå –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                logger.error("‚ùå –ß–µ–∫–±–æ–∫—Å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—à–µ–ª–µ–∫ —É–∂–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
                account_menu = metamask_page.locator('[data-testid="account-menu-icon"]')
                if account_menu.is_visible(timeout=2000):
                    logger.info("‚úì MetaMask —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                    
                    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
                    metamask_page.screenshot(path="screenshots/metamask_main.png")
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                    unlock_title = metamask_page.get_by_text("Welcome Back!")
                    if unlock_title.is_visible(timeout=2000):
                        logger.info("‚úì MetaMask —Ç—Ä–µ–±—É–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
                        
                        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                        logger.info("üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...")
                        metamask_page.screenshot(path="screenshots/metamask_unlock.png")
                    else:
                        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ MetaMask")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å MetaMask: {str(e)}")
        
        # –ñ–¥–µ–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        logger.info("‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥...")
        time.sleep(10)
        
        logger.success("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: {str(e)}")
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        logger.info("üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        pw.close()

if __name__ == "__main__":
    main() 